//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Player Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player Controls"",
    ""maps"": [
        {
            ""name"": ""Inventory Skill"",
            ""id"": ""eef0f14f-64e8-45d3-8ce3-be3eba005523"",
            ""actions"": [
                {
                    ""name"": ""Keyboard"",
                    ""type"": ""Button"",
                    ""id"": ""f81a94ec-8041-4cb1-b153-d1fbc73db648"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ebaf4890-90ae-4168-a124-167e2d56f068"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""423de7d3-29e3-4f76-a290-5ed8ca8403eb"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b6604e6-20a8-49d7-a180-8a4204212525"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e43a7214-0159-416b-b6bc-75b109b3dd5e"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Inventory Skill2"",
            ""id"": ""556f661c-0144-4821-b593-5a5b2d764441"",
            ""actions"": [
                {
                    ""name"": ""skill1"",
                    ""type"": ""Value"",
                    ""id"": ""fbb75ec8-2e84-464c-8cba-bba4924cab05"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""skill2"",
                    ""type"": ""Value"",
                    ""id"": ""486d532c-db1b-4375-aa6c-84d110925d6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""skill3"",
                    ""type"": ""Value"",
                    ""id"": ""46c1f2ac-3f11-45bd-8b07-e19b743b004c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""skill4"",
                    ""type"": ""Value"",
                    ""id"": ""adacb629-f807-4bb1-a798-92bdf1d36a66"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4fb651b7-087f-4b6a-a4f0-28663c67a919"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""skill1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3e1f3182-e282-4117-b05d-53682fb73ef9"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""skill2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c356213-e551-487a-ba7a-f10ee07fd78d"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""skill3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e2c99ea-21e1-448c-a255-a026914203fe"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""skill4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Inventory Skill
        m_InventorySkill = asset.FindActionMap("Inventory Skill", throwIfNotFound: true);
        m_InventorySkill_Keyboard = m_InventorySkill.FindAction("Keyboard", throwIfNotFound: true);
        // Inventory Skill2
        m_InventorySkill2 = asset.FindActionMap("Inventory Skill2", throwIfNotFound: true);
        m_InventorySkill2_skill1 = m_InventorySkill2.FindAction("skill1", throwIfNotFound: true);
        m_InventorySkill2_skill2 = m_InventorySkill2.FindAction("skill2", throwIfNotFound: true);
        m_InventorySkill2_skill3 = m_InventorySkill2.FindAction("skill3", throwIfNotFound: true);
        m_InventorySkill2_skill4 = m_InventorySkill2.FindAction("skill4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Inventory Skill
    private readonly InputActionMap m_InventorySkill;
    private IInventorySkillActions m_InventorySkillActionsCallbackInterface;
    private readonly InputAction m_InventorySkill_Keyboard;
    public struct InventorySkillActions
    {
        private @PlayerControls m_Wrapper;
        public InventorySkillActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Keyboard => m_Wrapper.m_InventorySkill_Keyboard;
        public InputActionMap Get() { return m_Wrapper.m_InventorySkill; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventorySkillActions set) { return set.Get(); }
        public void SetCallbacks(IInventorySkillActions instance)
        {
            if (m_Wrapper.m_InventorySkillActionsCallbackInterface != null)
            {
                @Keyboard.started -= m_Wrapper.m_InventorySkillActionsCallbackInterface.OnKeyboard;
                @Keyboard.performed -= m_Wrapper.m_InventorySkillActionsCallbackInterface.OnKeyboard;
                @Keyboard.canceled -= m_Wrapper.m_InventorySkillActionsCallbackInterface.OnKeyboard;
            }
            m_Wrapper.m_InventorySkillActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Keyboard.started += instance.OnKeyboard;
                @Keyboard.performed += instance.OnKeyboard;
                @Keyboard.canceled += instance.OnKeyboard;
            }
        }
    }
    public InventorySkillActions @InventorySkill => new InventorySkillActions(this);

    // Inventory Skill2
    private readonly InputActionMap m_InventorySkill2;
    private IInventorySkill2Actions m_InventorySkill2ActionsCallbackInterface;
    private readonly InputAction m_InventorySkill2_skill1;
    private readonly InputAction m_InventorySkill2_skill2;
    private readonly InputAction m_InventorySkill2_skill3;
    private readonly InputAction m_InventorySkill2_skill4;
    public struct InventorySkill2Actions
    {
        private @PlayerControls m_Wrapper;
        public InventorySkill2Actions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @skill1 => m_Wrapper.m_InventorySkill2_skill1;
        public InputAction @skill2 => m_Wrapper.m_InventorySkill2_skill2;
        public InputAction @skill3 => m_Wrapper.m_InventorySkill2_skill3;
        public InputAction @skill4 => m_Wrapper.m_InventorySkill2_skill4;
        public InputActionMap Get() { return m_Wrapper.m_InventorySkill2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventorySkill2Actions set) { return set.Get(); }
        public void SetCallbacks(IInventorySkill2Actions instance)
        {
            if (m_Wrapper.m_InventorySkill2ActionsCallbackInterface != null)
            {
                @skill1.started -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill1;
                @skill1.performed -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill1;
                @skill1.canceled -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill1;
                @skill2.started -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill2;
                @skill2.performed -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill2;
                @skill2.canceled -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill2;
                @skill3.started -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill3;
                @skill3.performed -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill3;
                @skill3.canceled -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill3;
                @skill4.started -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill4;
                @skill4.performed -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill4;
                @skill4.canceled -= m_Wrapper.m_InventorySkill2ActionsCallbackInterface.OnSkill4;
            }
            m_Wrapper.m_InventorySkill2ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @skill1.started += instance.OnSkill1;
                @skill1.performed += instance.OnSkill1;
                @skill1.canceled += instance.OnSkill1;
                @skill2.started += instance.OnSkill2;
                @skill2.performed += instance.OnSkill2;
                @skill2.canceled += instance.OnSkill2;
                @skill3.started += instance.OnSkill3;
                @skill3.performed += instance.OnSkill3;
                @skill3.canceled += instance.OnSkill3;
                @skill4.started += instance.OnSkill4;
                @skill4.performed += instance.OnSkill4;
                @skill4.canceled += instance.OnSkill4;
            }
        }
    }
    public InventorySkill2Actions @InventorySkill2 => new InventorySkill2Actions(this);
    public interface IInventorySkillActions
    {
        void OnKeyboard(InputAction.CallbackContext context);
    }
    public interface IInventorySkill2Actions
    {
        void OnSkill1(InputAction.CallbackContext context);
        void OnSkill2(InputAction.CallbackContext context);
        void OnSkill3(InputAction.CallbackContext context);
        void OnSkill4(InputAction.CallbackContext context);
    }
}
